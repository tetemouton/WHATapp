library(RODBC)


#____________________________________________________________________________________________________________  
# PS 1x1 from S_best

  channel <- odbcDriverConnect("DSN=Visual FoxPro Database;UID=;PWD=;
                                  SourceDB=\\\\corp.spc.int\\shared\\FAME\\NC_NOU\\OFP\\db1\\tuna_dbs\\Log_dbs\\DBF\\logsheet.dbc;SourceType=DBC;Exclusive=No;
                                  BackgroundFetch=Yes;Collate=Machine;Null=Yes;Deleted=Yes;")

  
  sqlcall = "SELECT * FROM S_best WHERE yy = 2019"
  
  
  ayr <- sqlQuery(channel, sqlcall, max=0, stringsAsFactors=FALSE)


#____________________________________________________________________________________________________________  
# OPPS
  
  channel <- odbcDriverConnect("DSN=Visual FoxPro Database;UID=;PWD=;
                               SourceDB=\\\\corp.spc.int\\shared\\FAME\\NC_NOU\\OFP\\db1\\tuna_dbs\\Log_dbs\\DBF\\logsheet.dbc;
                               SourceType=DBC;Exclusive=No;BackgroundFetch=Yes;Collate=Machine;Null=Yes;Deleted=Yes;")
  #sqlTables(channel)
  
  opdat <- sqlQuery(channel, "SELECT * FROM s_raw WHERE not dup_r AND year(logdate) <= 2019 AND year(logdate) >= 2000", max=0)
  save(opdat, file="C:/Tuvalu/2020/Updated/Data/OPPS_EEZ_DATA.RData")
  
  
  # Get the trip level fields to merge later on in R
  opdat_trip <- sqlQuery(channel, "SELECT * FROM s_trip", max=0)
  save(opdat_trip, file="C:/Tuvalu/2020/Updated/Data/OPPS_EEZ_TRIP-DATA.RData")
  

#____________________________________________________________________________________________________________  
# VMS data

  
  db1 <- "driver=SQL Server;server=nouSQL03;database=vms"
  
  lmchannel <- odbcDriverConnect(db1)
  
  ps_vms <- sqlQuery(lmchannel, paste(
                     "SELECT  vi.vesselname,           ",
                     "		flag_id,                      ",
                     "		cast(date_time as date) as date,         ",
                     "		avg(latitude) as avg_latitude,          ",
                     "		avg(longitude) as avg_longitude,         ",
                     "		sum(case when activity_code = 'F' then 01 else 00 end) as fishing_poll,      ",
                     "		sum(case when activity_code = 'T' then 01 else 00 end) as transit_poll,       ",
                     "		sum(case when activity_code = 'P' then 01 else 00 end) as in_port_poll,        ",
                     "		sum(case when activity_code not in ('F','P','T') then 01 else 00 end) as other_activity_poll      ",
                     "    FROM    dbo.vms_position t                     ",
                     "	INNER JOIN ref.vessel_instances vi ON t.vessel_id = vi.vessel_id AND t.date_time BETWEEN vi.start_date AND vi.calculated_end_date        ",
                     "    INNER JOIN ref.vessels v ON v.vessel_id = vi.vessel_id AND v.gear='S'         ",       #  change to v.gear = 'L'  for longline
                     "where  year(date_time) >= 2018        ",                                                   # select the start year here
                     "group by  vi.vesselname,      ",
                     "		flag_id,                  ",
                     "		cast(date_time as date)     ",
                     "order by 2,1,3  "))
  
  
  write.csv(ps_vms, file="C:/Tuvalu/2020/Updated/Data/ps_vms_vessel_day_2010_2020.csv", row.names=FALSE)
  
  
#____________________________________________________________________________________________________________  
# Observer data
  
  
  db1 <- "driver=SQL Server;server=nouSQL03;database=obsv_master"
  
  lmchannel <- odbcDriverConnect(db1)
  
  ps_obs <- sqlQuery(lmchannel, paste(
    "select year(act_date) as yy,MONTH(act_date) as Month_,DAY(act_date) as Day_, eez_code, ss.s_set_id,latd,lond, flag_id,",
    "ISNULL(cast(SUM(case when sp_code = 'SKJ' then obs_mt*1000 end) as int),0) as SKJ_kg,",
    "ISNULL(SUM(case when sp_code = 'SKJ' then sp_n_est end),0) as SKJ_n_est,",
    "ISNULL(cast(SUM(case when sp_code = 'BET' then obs_mt*1000 end) as int),0) as BET_kg,",
    "ISNULL(SUM(case when sp_code = 'BET' then sp_n_est end),0) as BET_n_est,",
    "ISNULL(cast(SUM(case when sp_code = 'YFT' then obs_mt*1000 end) as int),0) as YFT_kg,",
    "ISNULL(SUM(case when sp_code = 'YFT' then sp_n_est end),0) as YFT_n_est,",
    "ISNULL(cast(SUM(case when sp_code not in ('SKJ','BET','YFT') then sp_c_est*1000 end) as int),0) as OTH_kg_est,",
    "ISNULL(SUM(case when sp_code not in ('SKJ','BET','YFT') then sp_n_est end),0) as OTH_n_est",
    "FROM obsv.trip ot",
    "join ref.vessel_instances vi on ot.vessel_id = vi.vessel_id AND ot.dep_date BETWEEN vi.start_date AND vi.calculated_end_date",
    "join obsv.s_day sd on ot.obstrip_id = sd.obstrip_id",
    "join obsv.s_daylog sa on sd.s_day_id = sa.s_day_id",
    "join obsv.s_set ss on sa.s_daylog_id = ss.s_daylog_id",
    "join obsv.s_setcatch sc on ss.s_set_id = sc.s_set_id",
    "where latd < 0 and year(act_date) between 2000 and 2019",
    "group by flag_id,year(act_date),MONTH(act_date),DAY(act_date), ss.s_set_id,eez_code,latd,lond",
    "order by 4 desc, 2,3"
  ))
  
  write.csv(ps_obs, file="C:/Tuvalu/2020/Updated/Data/PSOBS.csv", row.names=FALSE)
  
  
#____________________________________________________________________________________________________________    
  
  
  
  
  